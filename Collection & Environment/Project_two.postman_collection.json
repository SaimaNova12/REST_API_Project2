{
	"info": {
		"_postman_id": "6802be1f-c490-4c2a-869a-7a9acc2ceaf9",
		"name": "Project_two",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32179388"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonid = pm.response.json()\r",
							"pm.environment.set(\"Id\", jsonid.bookingid)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstname = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"Firstname\", firstname)\r",
							"\r",
							"var lastname = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"Lastname\", lastname)\r",
							"\r",
							"var tprice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"Total Price\", parseInt(tprice))\r",
							"\r",
							"var dpaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"Depositpaid\", Boolean(dpaid))\r",
							"\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"/*var date = pm.variables.replaceIn(\"{{$randomDateFuture}}\")\r",
							"console.log(today.format(\"YYYY-MM-DD\"))*/\r",
							"var number = Math.random()*10\r",
							"var checkin = today.add(number, 'd').format(\"YYYY-MM-DD\")\r",
							"console.log(checkin)\r",
							"pm.environment.set(\"Check-In\", today.add(number, 'd').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"Check-Out\", today.add(number, 'd').add(7, 'd').format(\"YYYY-MM-DD\"))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{Firstname}}\",\r\n\t\"lastname\" : \"{{Lastname}}\",\r\n\t\"totalprice\" : {{Total Price}},\r\n\t\"depositpaid\" : {{Depositpaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{Check-In}}\",\r\n    \t\"checkout\" : \"{{Check-Out}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{purl}}/booking/",
					"host": [
						"{{purl}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Created Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var res = pm.response.json()\r",
							"pm.test(\"First Name Validation\", function(){\r",
							"    pm.expect(res.firstname).to.eql(pm.environment.get(\"Firstname\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Last Name Validation\", function(){\r",
							"    pm.expect(res.lastname).to.eql(pm.environment.get(\"Lastname\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Total Price Validation\", function(){\r",
							"    pm.expect(res.totalprice).to.eql(pm.environment.get(\"Total Price\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Depositpaid Validation\", function(){\r",
							"    pm.expect(res.depositpaid).to.eql(pm.environment.get(\"Depositpaid\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Check In Validation\", function(){\r",
							"    pm.expect(res.bookingdates.checkin).to.eql(pm.environment.get(\"Check-In\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Check Out Validation\", function(){\r",
							"    pm.expect(res.bookingdates.checkout).to.eql(pm.environment.get(\"Check-Out\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Additional Validation\", function(){\r",
							"    pm.expect(res.additionalneeds).to.eql(\"Breakfast\")\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{purl}}/booking/{{Id}}",
					"host": [
						"{{purl}}"
					],
					"path": [
						"booking",
						"{{Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var token = pm.response.json()\r",
							"pm.environment.set(\"Token\", token.token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{purl}}/auth",
					"host": [
						"{{purl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update the Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstname = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"Firstname\", firstname)\r",
							"\r",
							"var lastname = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"Lastname\", lastname)\r",
							"\r",
							"var tprice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"Total Price\", parseInt(tprice))\r",
							"\r",
							"var dpaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"Depositpaid\", Boolean(dpaid))\r",
							"\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"/*var date = pm.variables.replaceIn(\"{{$randomDateFuture}}\")\r",
							"console.log(today.format(\"YYYY-MM-DD\"))*/\r",
							"var number = Math.random()*10\r",
							"var checkin = today.add(number, 'd').format(\"YYYY-MM-DD\")\r",
							"console.log(checkin)\r",
							"pm.environment.set(\"Check-In\", today.add(number, 'd').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"Check-Out\", today.add(number, 'd').add(7, 'd').format(\"YYYY-MM-DD\"))"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{Token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{Firstname}}\",\r\n\t\"lastname\" : \"{{Lastname}}\",\r\n\t\"totalprice\" : {{Total Price}},\r\n\t\"depositpaid\" : {{Depositpaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{Check-In}}\",\r\n    \t\"checkout\" : \"{{Check-Out}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{purl}}/booking/{{Id}}",
					"host": [
						"{{purl}}"
					],
					"path": [
						"booking",
						"{{Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking after Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var res = pm.response.json()\r",
							"pm.test(\"First Name Validation\", function(){\r",
							"    pm.expect(res.firstname).to.eql(pm.environment.get(\"Firstname\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Last Name Validation\", function(){\r",
							"    pm.expect(res.lastname).to.eql(pm.environment.get(\"Lastname\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Total Price Validation\", function(){\r",
							"    pm.expect(res.totalprice).to.eql(pm.environment.get(\"Total Price\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Depositpaid Validation\", function(){\r",
							"    pm.expect(res.depositpaid).to.eql(pm.environment.get(\"Depositpaid\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Check In Validation\", function(){\r",
							"    pm.expect(res.bookingdates.checkin).to.eql(pm.environment.get(\"Check-In\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Check Out Validation\", function(){\r",
							"    pm.expect(res.bookingdates.checkout).to.eql(pm.environment.get(\"Check-Out\"))\r",
							"})\r",
							"\r",
							"pm.test(\"Additional Validation\", function(){\r",
							"    pm.expect(res.additionalneeds).to.eql(\"Breakfast\")\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{purl}}/booking/{{Id}}",
					"host": [
						"{{purl}}"
					],
					"path": [
						"booking",
						"{{Id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a Booking",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token = bae2e9a5c9760c0",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{purl}}/booking/{{Id}}",
					"host": [
						"{{purl}}"
					],
					"path": [
						"booking",
						"{{Id}}"
					]
				}
			},
			"response": []
		}
	]
}